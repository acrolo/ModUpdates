Patch "Boss Select" by "Hyper"
//
    static int SaveSlotIncrementation = 0;
//
{
    // Hide play time on slots.
    WriteProtected<byte>
    (
        ScanSignature
        (
            "%3d:%02d:%02d",
            "xxxxxxxxxxxxx"
        ),

        0x00
    );

    // Reduce save slots to 3.
    WriteProtected<byte>
    (
        /* 0x140A0628F */
        ScanSignature
        (
            "\x8D\x73\x04\x48\x8B\xD3",
            "xxxxxx"
        ),
        
        Assemble("lea esi, [rbx + 3]")
    );

    // Remove autosave slot text.
    WriteProtected<byte>
    (
        /* 0x140A0586E */
        ScanSignature
        (
            "\x75\x11\x48\x8D\x15\xCC\xCC\xCC\xCC\xE8\xCC\xCC\xCC\xCC\xE9\x24\x01\x00\x00",
            "xxxxx????x????xxxxx"
        ),

        0xEB
    );

    fixed (int* pSaveSlotIncrementation = &SaveSlotIncrementation)
    {
        // Reset incrementation.
        WriteAsmHook
        (
            $@"
                ; Restore original code.
                mov    eax, dword ptr [rsp + 0x2C0 + 0xFFFFFFFFFFFFFD70]
                mov    dword ptr [rbp + 0x1C0 + 0x18], eax
                movaps xmmword ptr [rsp + 0x2C0 + 0xFFFFFFFFFFFFFFB0], xmm6

                mov    r11, {(long)pSaveSlotIncrementation}
                mov    byte ptr [r11], 0
            ",

            /* 0x140A05394 */
            ScanSignature
            (
                "\x8B\x44\x24\x30\x89\x85\xD8\x01\x00\x00",
                "xxxxxxxxxx"
            ),

            HookBehavior.Replace
        );

        // Increment save slot counter to account for autosave being included.
        WriteAsmHook
        (
            $@"
                push rax
                mov  dword ptr [rbp + 0x1C0 + 0xFFFFFFFFFFFFFE28 + 4], 0x8000007F
                mov  rax, {(long)pSaveSlotIncrementation}
                mov  r8d, dword ptr [rax]
                inc  r8d
                mov  dword ptr [rax], r8d
                pop  rax
            ",

            /* 0x140A058FB */
            ScanSignature
            (
                "\xC7\x45\xEC\x7F\x00\x00\x80\x44\x0F\xB6\x40\x14",
                "xxxxxxxxxxxx"
            ),

            HookBehavior.Replace
        );
    }

    // Hide "Turn page" option for Boss Rush.
    WriteProtected<byte>
    (
        /* 0x1409F0F51 */
        ScanSignature
        (
            "\x0F\x85\x87\x00\x00\x00\x48\x85\xC0",
            "xxxxxxxxx"
        ),

        0xE9, 0x88, 0x00, 0x00, 0x00
    );

    // Change title music.
    WriteProtected<byte>
    (
        ScanSignature
        (
            "bgm_sys_title",
            "xxxxxxxxxxxxx"
        ),

        System.Text.Encoding.UTF8.GetBytes("bgm_enemy\0")
    );

    // Disable Continue.
    WriteProtected<byte>
    (
        /* 0x1409E9AD3 */
        ScanSignature
        (
            "\x74\x5B\x48\x83\x78\x08\x00",
            "xxxxxxx"
        ),
        
        0xEB
    );

    // Disable New Game.
    WriteNop
    (
        /* 0x1409E9B82 */
        ScanSignature
        (
            "\xE8\xCC\xCC\xCC\xCC\x48\x8D\x55\xD8\x49\x8B\xCF\xE8\xCC\xCC\xCC\xCC\x48\x8D\x55\xC0\x48\x8B\xC8\xE8\xCC\xCC\xCC\xCC\x48\x8B\x4D\xE8\x4C\x8D\x2D",
            "x????xxxxxxxx????xxxxxxxx????xxxxxxx"
        ),
        
        5
    );

    // Disable Arcade Mode.
    WriteProtected<byte>
    (
        /* 0x1409E9F0C */
        ScanSignature
        (
            "\x74\x57\x4C\x8B\x73\x08",
            "xxxxxx"
        ),
        
        0xEB
    );

    // Disable Cyber Space Challenge.
    WriteNop
    (
        /* 0x1409E9E74 */
        ScanSignature
        (
            "\x0F\x84\x9B\x00\x00\x00\x4C\x8B\x73\x08\xBA\x08\x01\x00\x00\x41\xB8\x08\x00\x00\x00\x49\x8B\xCE\x49\x8B\x06\xFF\x50\xCC\x48\x85\xC0\x74\x16\x41\xB8\x04\x00\x00\x00",
            "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx?xxxxxxxxxxx"
        )
        + 0x58,

        5
    );
}

Patch "Fix Empty Messages" by "Hyper"
{
    /* 0x14093AFBF */
    var sig = ScanSignature
    (
        "\x57\x41\x56\x41\x57\x48\x83\xEC\x20\x4C\x8B\xF1\x48\x8B\xEA",
        "xxxxxxxxxxxxxxx"
    );

    if (sig == 0)
        return;

    WriteAsmHook
    (
        @"
            push rax

            ; Checks the overlay type, expected 1.
            mov eax, dword ptr [rdx + 0x18]
            cmp eax, 1
            jne ret

            ; Checks if the string field is null.
            mov rax, qword ptr [rdx + 0x48]
            cmp rax, 0
            jnz ret

            ; Immediately return if the string field is null.
            pop rax
            ret

        ret:
            pop rax

            ; Restore original code.
            push rdi
            push r14
            push r15
            sub  rsp, 0x20
            mov  r14, rcx
            mov  rbp, rdx
        ",

        sig,

        HookBehavior.Replace
    );
}

Patch "Set Window Title" by "Hyper"
{
    fixed (byte* pTitle = System.Text.Encoding.UTF8.GetBytes("Sonic Frontiers: Boss Select\0"))
    {
        WriteAsmHook
        (
            $@"
                mov rax, {(long)pTitle}
                lea rcx, qword ptr [rbp + 0x8C0 + 0xFFFFFFFFFFFFF8F0]
            ",

            /* 0x14007ADE5 */
            ScanSignature
            (
                "\x48\x8B\x05\xCC\xCC\xCC\xCC\x48\x8D\x8D\xB0\x01\x00\x00",
                "xxx????xxxxxxx"
            ),

            HookBehavior.Replace
        );
    }
}